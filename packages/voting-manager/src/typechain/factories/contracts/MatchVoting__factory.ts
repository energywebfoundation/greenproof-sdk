/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MatchVoting,
  MatchVotingInterface,
} from "../../contracts/MatchVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_certificateContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyVotedOrNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoConsensusReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoVotesYet",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingAlreadyEnded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    name: "WinningMatch",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "addWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "certificateContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
    ],
    name: "getWinningMatch",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "getWorkerVote",
    outputs: [
      {
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "matchInputToVoting",
    outputs: [
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "string",
        name: "winningMatch",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "removeWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workerToIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fb138038062001fb1833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611da5806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063e8d5940d11610066578063e8d5940d14610202578063ee2a710d1461021e578063f1a22dc21461024e578063f2fde38b1461027e576100cf565b80638da5cb5b146101aa578063aab5720b146101c8578063c4f987a5146101e6576100cf565b806306f77ffc146100d457806326017dee14610104578063396292d41461013457806364a3a51914610166578063715018a614610184578063806ad57e1461018e575b600080fd5b6100ee60048036038101906100e99190611468565b61029a565b6040516100fb91906117f2565b60405180910390f35b61011e600480360381019061011991906113fe565b610407565b60405161012b91906118db565b60405180910390f35b61014e60048036038101906101499190611427565b61041f565b60405161015d939291906117b4565b60405180910390f35b61016e610501565b60405161017b91906118db565b60405180910390f35b61018c610507565b005b6101a860048036038101906101a391906113fe565b61058f565b005b6101b26106c6565b6040516101bf919061177e565b60405180910390f35b6101d06106ef565b6040516101dd919061177e565b60405180910390f35b61020060048036038101906101fb91906113fe565b610715565b005b61021c600480360381019061021791906114bc565b6109bc565b005b61023860048036038101906102339190611427565b610d2c565b6040516102459190611799565b60405180910390f35b61026860048036038101906102639190611528565b611039565b604051610275919061177e565b60405180910390f35b610298600480360381019061029391906113fe565b611078565b005b60606102a4611170565b73ffffffffffffffffffffffffffffffffffffffff166102c26106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f906118bb565b60405180910390fd5b6005836040516103289190611750565b908152602001604051809103902060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461038190611b27565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad90611b27565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905092915050565b60046020528060005260406000206000915090505481565b6005818051602081018201805184825260208301602085012081835280955050505050506000915090508060030160009054906101000a900460ff16908060030160019054906101000a900460ff169080600401805461047e90611b27565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90611b27565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b5050505050905083565b60035481565b61050f611170565b73ffffffffffffffffffffffffffffffffffffffff1661052d6106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a906118bb565b60405180910390fd5b61058d6000611178565b565b610597611170565b73ffffffffffffffffffffffffffffffffffffffff166105b56106c6565b73ffffffffffffffffffffffffffffffffffffffff161461060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610602906118bb565b60405180910390fd5b600280549050600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028054905060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61071d611170565b73ffffffffffffffffffffffffffffffffffffffff1661073b6106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610788906118bb565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506002818154811061080f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260016002805490506108509190611a69565b81548110610887577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481106108ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260016002805490506109489190611a69565b8154811061097f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002805490506003819055505050565b60006005836040516109ce9190611750565b908152602001604051809103902090508060030160009054906101000a900460ff1615610a27576040517f181ff59a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160019054906101000a900460ff16610b6e5760005b600280549050811015610b4f576040518060400160405280600981526020017f4e4f5420564f544544000000000000000000000000000000000000000000000081525082600101600060028481548110610ac3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610b3b92919061123c565b508080610b4790611b8a565b915050610a40565b5060018160030160016101000a81548160ff0219169083151502179055505b604051602001610b7d9061189b565b604051602081830303815290604052805190602001208160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051602001610be49190611859565b6040516020818303038152906040528051906020012014610c31576040517fdf85dcd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610c8692919061123c565b5060008160020183604051610c9b9190611750565b9081526020016040518091039020541415610cef578060000182908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610ced92919061123c565b505b60018160020183604051610d039190611750565b90815260200160405180910390206000828254610d209190611988565b92505081905550505050565b6000610d36611170565b73ffffffffffffffffffffffffffffffffffffffff16610d546106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da1906118bb565b60405180910390fd5b6000600583604051610dbc9190611750565b90815260200160405180910390209050600081600001805490501415610e0e576040517f7aca937400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600090505b8260000180549050811015610f70578183600201846000018381548110610e66577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610e7d9190611767565b9081526020016040518091039020541115610f5d5782600201836000018281548110610ed2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610ee99190611767565b9081526020016040518091039020549150826000018181548110610f36577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200183600401908054610f5090611b27565b610f5b9291906112c2565b505b8080610f6890611b8a565b915050610e16565b5060028080549050600a610f849190611a0f565b610f8e91906119de565b81600a610f9b9190611a0f565b1015610fd3576040517fcc65c64400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260030160006101000a81548160ff0219169083151502179055507f97f1a0585ab7a1ef5fc6c5212e65add01e453b8f33dc78b721d789e769c75bf684836004018360405161102693929190611814565b60405180910390a1600192505050919050565b6002818154811061104957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611080611170565b73ffffffffffffffffffffffffffffffffffffffff1661109e6106c6565b73ffffffffffffffffffffffffffffffffffffffff16146110f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110eb906118bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115b9061187b565b60405180910390fd5b61116d81611178565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461124890611b27565b90600052602060002090601f01602090048101928261126a57600085556112b1565b82601f1061128357805160ff19168380011785556112b1565b828001600101855582156112b1579182015b828111156112b0578251825591602001919060010190611295565b5b5090506112be919061134f565b5090565b8280546112ce90611b27565b90600052602060002090601f0160209004810192826112f0576000855561133e565b82601f10611301578054855561133e565b8280016001018555821561133e57600052602060002091601f016020900482015b8281111561133d578254825591600101919060010190611322565b5b50905061134b919061134f565b5090565b5b80821115611368576000816000905550600101611350565b5090565b600061137f61137a8461191b565b6118f6565b90508281526020810184848401111561139757600080fd5b6113a2848285611ae5565b509392505050565b6000813590506113b981611d41565b92915050565b600082601f8301126113d057600080fd5b81356113e084826020860161136c565b91505092915050565b6000813590506113f881611d58565b92915050565b60006020828403121561141057600080fd5b600061141e848285016113aa565b91505092915050565b60006020828403121561143957600080fd5b600082013567ffffffffffffffff81111561145357600080fd5b61145f848285016113bf565b91505092915050565b6000806040838503121561147b57600080fd5b600083013567ffffffffffffffff81111561149557600080fd5b6114a1858286016113bf565b92505060206114b2858286016113aa565b9150509250929050565b600080604083850312156114cf57600080fd5b600083013567ffffffffffffffff8111156114e957600080fd5b6114f5858286016113bf565b925050602083013567ffffffffffffffff81111561151257600080fd5b61151e858286016113bf565b9150509250929050565b60006020828403121561153a57600080fd5b6000611548848285016113e9565b91505092915050565b61155a81611a9d565b82525050565b61156981611aaf565b82525050565b600061157a82611961565b611584818561196c565b9350611594818560208601611af4565b61159d81611c8f565b840191505092915050565b60006115b382611961565b6115bd818561197d565b93506115cd818560208601611af4565b80840191505092915050565b600081546115e681611b27565b6115f0818661196c565b9450600182166000811461160b576001811461161d57611650565b60ff1983168652602086019350611650565b6116268561194c565b60005b8381101561164857815481890152600182019150602081019050611629565b808801955050505b50505092915050565b6000815461166681611b27565b611670818661197d565b9450600182166000811461168b576001811461169c576116cf565b60ff198316865281860193506116cf565b6116a58561194c565b60005b838110156116c7578154818901526001820191506020810190506116a8565b838801955050505b50505092915050565b60006116e560268361196c565b91506116f082611ca0565b604082019050919050565b600061170860098361196c565b915061171382611cef565b602082019050919050565b600061172b60208361196c565b915061173682611d18565b602082019050919050565b61174a81611adb565b82525050565b600061175c82846115a8565b915081905092915050565b60006117738284611659565b915081905092915050565b60006020820190506117936000830184611551565b92915050565b60006020820190506117ae6000830184611560565b92915050565b60006060820190506117c96000830186611560565b6117d66020830185611560565b81810360408301526117e8818461156f565b9050949350505050565b6000602082019050818103600083015261180c818461156f565b905092915050565b6000606082019050818103600083015261182e818661156f565b9050818103602083015261184281856115d9565b90506118516040830184611741565b949350505050565b6000602082019050818103600083015261187381846115d9565b905092915050565b60006020820190508181036000830152611894816116d8565b9050919050565b600060208201905081810360008301526118b4816116fb565b9050919050565b600060208201905081810360008301526118d48161171e565b9050919050565b60006020820190506118f06000830184611741565b92915050565b6000611900611911565b905061190c8282611b59565b919050565b6000604051905090565b600067ffffffffffffffff82111561193657611935611c60565b5b61193f82611c8f565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061199382611adb565b915061199e83611adb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119d3576119d2611bd3565b5b828201905092915050565b60006119e982611adb565b91506119f483611adb565b925082611a0457611a03611c02565b5b828204905092915050565b6000611a1a82611adb565b9150611a2583611adb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a5e57611a5d611bd3565b5b828202905092915050565b6000611a7482611adb565b9150611a7f83611adb565b925082821015611a9257611a91611bd3565b5b828203905092915050565b6000611aa882611abb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b12578082015181840152602081019050611af7565b83811115611b21576000848401525b50505050565b60006002820490506001821680611b3f57607f821691505b60208210811415611b5357611b52611c31565b5b50919050565b611b6282611c8f565b810181811067ffffffffffffffff82111715611b8157611b80611c60565b5b80604052505050565b6000611b9582611adb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bc857611bc7611bd3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e4f5420564f5445440000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611d4a81611a9d565b8114611d5557600080fd5b50565b611d6181611adb565b8114611d6c57600080fd5b5056fea26469706673582212204c7d4f48cc879b1fdcf8e9e7ad3427aa2b80400b3ab597a39e187e8ff7b6ef2164736f6c63430008040033";

type MatchVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatchVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatchVoting__factory extends ContractFactory {
  constructor(...args: MatchVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _certificateContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MatchVoting> {
    return super.deploy(
      _certificateContractAddress,
      overrides || {}
    ) as Promise<MatchVoting>;
  }
  override getDeployTransaction(
    _certificateContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _certificateContractAddress,
      overrides || {}
    );
  }
  override attach(address: string): MatchVoting {
    return super.attach(address) as MatchVoting;
  }
  override connect(signer: Signer): MatchVoting__factory {
    return super.connect(signer) as MatchVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatchVotingInterface {
    return new utils.Interface(_abi) as MatchVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MatchVoting {
    return new Contract(address, _abi, signerOrProvider) as MatchVoting;
  }
}
