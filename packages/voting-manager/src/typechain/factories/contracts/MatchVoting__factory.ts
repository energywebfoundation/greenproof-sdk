/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MatchVoting,
  MatchVotingInterface,
} from "../../contracts/MatchVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_certificateContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyVotedOrNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoConsensusReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoVotesYet",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingAlreadyEnded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    name: "WinningMatch",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "addWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "certificateContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
    ],
    name: "getWinningMatch",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "getWorkerVote",
    outputs: [
      {
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "matchInputToVoting",
    outputs: [
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "string",
        name: "winningMatch",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "removeWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "matchInput",
        type: "string",
      },
      {
        internalType: "string",
        name: "matchResult",
        type: "string",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workerToIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fba38038062001fba833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611dae806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063e8d5940d11610066578063e8d5940d14610202578063ee2a710d1461021e578063f1a22dc21461024e578063f2fde38b1461027e576100cf565b80638da5cb5b146101aa578063aab5720b146101c8578063c4f987a5146101e6576100cf565b806306f77ffc146100d457806326017dee14610104578063396292d41461013457806364a3a51914610166578063715018a614610184578063806ad57e1461018e575b600080fd5b6100ee60048036038101906100e99190611471565b61029a565b6040516100fb91906117fb565b60405180910390f35b61011e60048036038101906101199190611407565b610407565b60405161012b91906118e4565b60405180910390f35b61014e60048036038101906101499190611430565b61041f565b60405161015d939291906117bd565b60405180910390f35b61016e610501565b60405161017b91906118e4565b60405180910390f35b61018c610507565b005b6101a860048036038101906101a39190611407565b61058f565b005b6101b26106c6565b6040516101bf9190611787565b60405180910390f35b6101d06106ef565b6040516101dd9190611787565b60405180910390f35b61020060048036038101906101fb9190611407565b610715565b005b61021c600480360381019061021791906114c5565b6109c5565b005b61023860048036038101906102339190611430565b610d35565b60405161024591906117a2565b60405180910390f35b61026860048036038101906102639190611531565b611042565b6040516102759190611787565b60405180910390f35b61029860048036038101906102939190611407565b611081565b005b60606102a4611179565b73ffffffffffffffffffffffffffffffffffffffff166102c26106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f906118c4565b60405180910390fd5b6005836040516103289190611759565b908152602001604051809103902060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461038190611b30565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad90611b30565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905092915050565b60046020528060005260406000206000915090505481565b6005818051602081018201805184825260208301602085012081835280955050505050506000915090508060030160009054906101000a900460ff16908060030160019054906101000a900460ff169080600401805461047e90611b30565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90611b30565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b5050505050905083565b60035481565b61050f611179565b73ffffffffffffffffffffffffffffffffffffffff1661052d6106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a906118c4565b60405180910390fd5b61058d6000611181565b565b610597611179565b73ffffffffffffffffffffffffffffffffffffffff166105b56106c6565b73ffffffffffffffffffffffffffffffffffffffff161461060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610602906118c4565b60405180910390fd5b600280549050600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028054905060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61071d611179565b73ffffffffffffffffffffffffffffffffffffffff1661073b6106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610788906118c4565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506002818154811061080f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260016002805490506108509190611a72565b81548110610887577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481106108ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260016002805490506109489190611a72565b8154811061097f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560016003546109bb9190611a72565b6003819055505050565b60006005836040516109d79190611759565b908152602001604051809103902090508060030160009054906101000a900460ff1615610a30576040517f181ff59a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160019054906101000a900460ff16610b775760005b600280549050811015610b58576040518060400160405280600981526020017f4e4f5420564f544544000000000000000000000000000000000000000000000081525082600101600060028481548110610acc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610b44929190611245565b508080610b5090611b93565b915050610a49565b5060018160030160016101000a81548160ff0219169083151502179055505b604051602001610b86906118a4565b604051602081830303815290604052805190602001208160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051602001610bed9190611862565b6040516020818303038152906040528051906020012014610c3a576040517fdf85dcd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610c8f929190611245565b5060008160020183604051610ca49190611759565b9081526020016040518091039020541415610cf8578060000182908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610cf6929190611245565b505b60018160020183604051610d0c9190611759565b90815260200160405180910390206000828254610d299190611991565b92505081905550505050565b6000610d3f611179565b73ffffffffffffffffffffffffffffffffffffffff16610d5d6106c6565b73ffffffffffffffffffffffffffffffffffffffff1614610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa906118c4565b60405180910390fd5b6000600583604051610dc59190611759565b90815260200160405180910390209050600081600001805490501415610e17576040517f7aca937400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600090505b8260000180549050811015610f79578183600201846000018381548110610e6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610e869190611770565b9081526020016040518091039020541115610f665782600201836000018281548110610edb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610ef29190611770565b9081526020016040518091039020549150826000018181548110610f3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200183600401908054610f5990611b30565b610f649291906112cb565b505b8080610f7190611b93565b915050610e1f565b5060028080549050600a610f8d9190611a18565b610f9791906119e7565b81600a610fa49190611a18565b1015610fdc576040517fcc65c64400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260030160006101000a81548160ff0219169083151502179055507f97f1a0585ab7a1ef5fc6c5212e65add01e453b8f33dc78b721d789e769c75bf684836004018360405161102f9392919061181d565b60405180910390a1600192505050919050565b6002818154811061105257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611089611179565b73ffffffffffffffffffffffffffffffffffffffff166110a76106c6565b73ffffffffffffffffffffffffffffffffffffffff16146110fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f4906118c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561116d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116490611884565b60405180910390fd5b61117681611181565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461125190611b30565b90600052602060002090601f01602090048101928261127357600085556112ba565b82601f1061128c57805160ff19168380011785556112ba565b828001600101855582156112ba579182015b828111156112b957825182559160200191906001019061129e565b5b5090506112c79190611358565b5090565b8280546112d790611b30565b90600052602060002090601f0160209004810192826112f95760008555611347565b82601f1061130a5780548555611347565b8280016001018555821561134757600052602060002091601f016020900482015b8281111561134657825482559160010191906001019061132b565b5b5090506113549190611358565b5090565b5b80821115611371576000816000905550600101611359565b5090565b600061138861138384611924565b6118ff565b9050828152602081018484840111156113a057600080fd5b6113ab848285611aee565b509392505050565b6000813590506113c281611d4a565b92915050565b600082601f8301126113d957600080fd5b81356113e9848260208601611375565b91505092915050565b60008135905061140181611d61565b92915050565b60006020828403121561141957600080fd5b6000611427848285016113b3565b91505092915050565b60006020828403121561144257600080fd5b600082013567ffffffffffffffff81111561145c57600080fd5b611468848285016113c8565b91505092915050565b6000806040838503121561148457600080fd5b600083013567ffffffffffffffff81111561149e57600080fd5b6114aa858286016113c8565b92505060206114bb858286016113b3565b9150509250929050565b600080604083850312156114d857600080fd5b600083013567ffffffffffffffff8111156114f257600080fd5b6114fe858286016113c8565b925050602083013567ffffffffffffffff81111561151b57600080fd5b611527858286016113c8565b9150509250929050565b60006020828403121561154357600080fd5b6000611551848285016113f2565b91505092915050565b61156381611aa6565b82525050565b61157281611ab8565b82525050565b60006115838261196a565b61158d8185611975565b935061159d818560208601611afd565b6115a681611c98565b840191505092915050565b60006115bc8261196a565b6115c68185611986565b93506115d6818560208601611afd565b80840191505092915050565b600081546115ef81611b30565b6115f98186611975565b94506001821660008114611614576001811461162657611659565b60ff1983168652602086019350611659565b61162f85611955565b60005b8381101561165157815481890152600182019150602081019050611632565b808801955050505b50505092915050565b6000815461166f81611b30565b6116798186611986565b9450600182166000811461169457600181146116a5576116d8565b60ff198316865281860193506116d8565b6116ae85611955565b60005b838110156116d0578154818901526001820191506020810190506116b1565b838801955050505b50505092915050565b60006116ee602683611975565b91506116f982611ca9565b604082019050919050565b6000611711600983611975565b915061171c82611cf8565b602082019050919050565b6000611734602083611975565b915061173f82611d21565b602082019050919050565b61175381611ae4565b82525050565b600061176582846115b1565b915081905092915050565b600061177c8284611662565b915081905092915050565b600060208201905061179c600083018461155a565b92915050565b60006020820190506117b76000830184611569565b92915050565b60006060820190506117d26000830186611569565b6117df6020830185611569565b81810360408301526117f18184611578565b9050949350505050565b600060208201905081810360008301526118158184611578565b905092915050565b600060608201905081810360008301526118378186611578565b9050818103602083015261184b81856115e2565b905061185a604083018461174a565b949350505050565b6000602082019050818103600083015261187c81846115e2565b905092915050565b6000602082019050818103600083015261189d816116e1565b9050919050565b600060208201905081810360008301526118bd81611704565b9050919050565b600060208201905081810360008301526118dd81611727565b9050919050565b60006020820190506118f9600083018461174a565b92915050565b600061190961191a565b90506119158282611b62565b919050565b6000604051905090565b600067ffffffffffffffff82111561193f5761193e611c69565b5b61194882611c98565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061199c82611ae4565b91506119a783611ae4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119dc576119db611bdc565b5b828201905092915050565b60006119f282611ae4565b91506119fd83611ae4565b925082611a0d57611a0c611c0b565b5b828204905092915050565b6000611a2382611ae4565b9150611a2e83611ae4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a6757611a66611bdc565b5b828202905092915050565b6000611a7d82611ae4565b9150611a8883611ae4565b925082821015611a9b57611a9a611bdc565b5b828203905092915050565b6000611ab182611ac4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b1b578082015181840152602081019050611b00565b83811115611b2a576000848401525b50505050565b60006002820490506001821680611b4857607f821691505b60208210811415611b5c57611b5b611c3a565b5b50919050565b611b6b82611c98565b810181811067ffffffffffffffff82111715611b8a57611b89611c69565b5b80604052505050565b6000611b9e82611ae4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bd157611bd0611bdc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e4f5420564f5445440000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611d5381611aa6565b8114611d5e57600080fd5b50565b611d6a81611ae4565b8114611d7557600080fd5b5056fea2646970667358221220bd0a9da900e382bd608d0769cf21c8b44ef7c2bbc3d56010336bd52698780fd064736f6c63430008040033";

type MatchVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatchVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatchVoting__factory extends ContractFactory {
  constructor(...args: MatchVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _certificateContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MatchVoting> {
    return super.deploy(
      _certificateContractAddress,
      overrides || {}
    ) as Promise<MatchVoting>;
  }
  override getDeployTransaction(
    _certificateContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _certificateContractAddress,
      overrides || {}
    );
  }
  override attach(address: string): MatchVoting {
    return super.attach(address) as MatchVoting;
  }
  override connect(signer: Signer): MatchVoting__factory {
    return super.connect(signer) as MatchVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatchVotingInterface {
    return new utils.Interface(_abi) as MatchVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MatchVoting {
    return new Contract(address, _abi, signerOrProvider) as MatchVoting;
  }
}
